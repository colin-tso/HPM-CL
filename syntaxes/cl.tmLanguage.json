{
  "fileTypes": ["cl"],
  "scopeName": "source.cl",
  "name": "HPMCL",
  "patterns": [
    {
      "match": "\\n",
      "name": "meta.ending-space"
    },
    {
      "include": "#round-brackets"
    },
    {
      "begin": "^(?=\\t)",
      "end": "(?=[^\\t])",
      "name": "meta.leading-space",
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "meta.odd-tab.tabs"
            },
            "2": {
              "name": "meta.even-tab.tabs"
            }
          },
          "match": "(\\t)(\\t)?"
        }
      ]
    },
    {
      "begin": "^(?= )",
      "end": "(?=[^ ])",
      "name": "meta.leading-space",
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "meta.odd-tab.spaces"
            },
            "2": {
              "name": "meta.even-tab.spaces"
            }
          },
          "match": "(  )(  )?"
        }
      ]
    },
    {
      "patterns": [
        {
          "name": "comment.line.double-dash.cl",
          "begin": "--",
          "end": "\n"
        }
      ]
    },
    {
      "match": "(?i:\\b(if|while|for|return|when|else|repeat|loop|exit|call|goto|then|send|read|write|initiate|open)\\b)",
      "name": "keyword.control.cl"
    },
    {
      "match": "\\b(?i)(abort|access|alarm|badval|not|and|generic|parameter|number|value|eu|or|int|access|engineer|exists|date_time|mins|hours|secs|general|class|backgrnd|allow_bad|bld_visible|equal_null_point_id|others|pv_alg|point)\\b",
      "name": "keyword.control.cl"
    },
    {
      "match": "\\b(?i)(at)\\b",
      "name": "keyword.control.location.cl"
    },
    {
      "match": "(?i:\\b(Mod|And|Not|Or|Xor|as)\\b)",
      "name": "keyword.operator.cl"
    },
    {
      "captures": {
        "1": {
          "name": "storage.declaration.cl"
        },
        "2": {
          "name": "variable.declaration.cl"
        },
        "3": {
          "name": "meta.separator.comma.cl"
        }
      },
      "match": "(?i:(EXTERNAL|LOCAL)\\s*(\\b[a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*\\b)\\s*(,?))"
    },
    {
      "captures": {
        "2": {
          "name": "variable.declaration.cl"
        }
      },
      "match": "(?i:((?<=,)\\s*\\b([a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*)\\b(?!(\\(|\\.))))"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.variable.cl"
        },
        "2": {
          "name": "variable.other.cl"
        },
        "3": {
          "name": "punctuation.definition.class.cl"
        },
        "4": {
          "name": "support.class.cl"
        },
        "5": {
          "name": "meta.separator.comma.cl"
        }
      },
      "match": "(?i:\\s*(SET)\\s*(\\b[a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*\\b)(?:(\\.)\\b([a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*)\\b)?\\s*(,)?)"
    },
    {
      "captures": {
        "1": {
          "name": "keyword.control.location.cl"
        },
        "2": {
          "name": "variable.location.cl"
        },
        "3": {
          "name": "punctuation.definition.class.cl"
        },
        "4": {
          "name": "support.class.cl"
        }
      },
      "match": "(?i:\\s*(AT)\\s*(\\b[a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*\\b)(?:(\\.)\\b([a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*)\\b)?)"
    },
    {
      "match": "(?i:\\s*\\b(custom|end|package|block|param_list|subroutine|phase|step|sequence|define)\\b\\s*)",
      "name": "storage.type.cl"
    },
    {
      "match": "(?i:\\b(Private|Public|Default)\\b)",
      "name": "storage.modifier.cl"
    },
    {
      "match": "(?i:\\s*\\b(ON|OFF|CAS|AUTO|MAN|ACTIVE|INACTIVE|PRESET|RUN|HIGH|MEDIUM|LOW|NORMAL|OPERATOR|PROGRAM|REG_CTL)\\b)",
      "name": "constant.language.cl"
    },
    {
      "match": "&",
      "name": "constant.character.cl"
    },
    {
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.cl"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.cl"
        }
      },
      "name": "string.quoted.double.cl",
      "patterns": [
        {
          "match": "\"\"",
          "name": "constant.character.escape.apostrophe.cl"
        }
      ]
    },
    {
      "match": "(?i:\\b(Abs|array|Atan|Avg|Cos|Date_Time|Equal_String|Exp|Int|Len|ln|Log10|Max|Min|Modify_String|Round|Set_Bad|Sin|Sqrt|Sum|Tan)\\b)",
      "name": "support.function.cl"
    },
    {
      "match": "-?\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\\b",
      "name": "constant.numeric.cl"
    },
    {
      "match": "(?i:\\b(number|logical|time|string|enumeration)\\b)",
      "name": "support.type.cl"
    },
    {
      "captures": {
        "1": {
          "name": "entity.name.function.begin.cl"
        }
      },
      "match": "(?i:((?<!\\.)\\b[a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*\\b)\\s*(?=\\(\\)?))",
      "name": "support.function.cl"
    },
    {
      "captures": {
        "1": {
          "name": "entity.name.function.end.cl"
        }
      },
      "match": "(?i:((?<=^END\\s)\\s*\\b[a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*\\b))"
    },
    {
      "match": "(?i:((?<=(\\+|=|-|\\\\|/|<|>|\\(|\\*|[^(,\\s*)])\\s*)(?<!\\.)(?<!^GOTO\\s*)(?<!\\s*GOTO\\s*)(?<!^END\\s)(?<!\\s*END\\s)\\b(?!(ON|OFF|CAS|AUTO|MAN|ACTIVE|INACTIVE|PRESET|RUN|HIGH|MEDIUM|LOW|NORMAL|OPERATOR|PROGRAM|SET|REG_CTL)\\b)([a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*)\\b(?!((\\(|\\.)))|(?<!\\.)\\b([a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*)\\b(?=\\s*(\\+|=|-|\\\\|/|<|>|\\(|\\)|\\*))))",
      "name": "variable.other.cl"
    },
    {
      "captures": {
        "1": {
          "name": "variable.other.cl"
        },
        "2": {
          "name": "punctuation.definition.class.cl"
        },
        "3": {
          "name": "support.class.cl"
        }
      },
      "match": "\\b([a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*)\\b(\\.)\\b([a-zA-Z0-9_]*[a-zA-Z_]*[a-zA-Z_][a-zA-Z0-9_]*)\\b"
    },
    {
      "match": "!|\\$|%|\\*|\\-\\-|\\-|\\+\\+|\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|\\|\\||\\?\\:|\\*=|/=|%=|\\+=|\\-=|\\^=|\\b(in|instanceof|new|delete|typeof|void)\\b",
      "name": "keyword.operator.cl"
    }
  ],
  "repository": {
    "round-brackets": {
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "punctuation.section.round-brackets.begin.cl"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.section.round-brackets.end.cl"
        }
      },
      "name": "meta.round-brackets",
      "patterns": [
        {
          "include": "$self"
        }
      ]
    }
  }
}
